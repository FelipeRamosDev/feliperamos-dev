name: Health Check

on:
  schedule:
    - cron: '0 */6 * * *' # Every 6 hours
  workflow_dispatch: # Allow manual trigger

jobs:
  health-check:
    name: Production Health Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Health check - Basic connectivity
      run: |
        echo "🔍 Checking basic connectivity..."
        curl -f -s -o /dev/null -w "%{http_code}" https://feliperamos.dev || exit 1
        echo "✅ Basic connectivity check passed"

    - name: Health check - Performance
      run: |
        echo "📊 Running performance check..."
        npm install -g @lhci/cli@0.12.x
        
        # Create a simple lighthouse config for health check
        cat > lighthouserc.json << EOF
        {
          "ci": {
            "collect": {
              "url": ["https://feliperamos.dev"],
              "numberOfRuns": 1
            },
            "assert": {
              "assertions": {
                "categories:performance": ["warn", {"minScore": 0.8}],
                "categories:accessibility": ["warn", {"minScore": 0.9}],
                "categories:best-practices": ["warn", {"minScore": 0.8}],
                "categories:seo": ["warn", {"minScore": 0.9}]
              }
            }
          }
        }
        EOF
        
        lhci autorun || echo "Performance check completed with warnings"

    - name: Health check - API endpoints
      run: |
        echo "🔌 Checking API endpoints..."
        
        # Check if the site returns valid HTML
        RESPONSE=$(curl -s -H "Accept: text/html" https://feliperamos.dev)
        if echo "$RESPONSE" | grep -q "<html"; then
          echo "✅ HTML response check passed"
        else
          echo "❌ HTML response check failed"
          exit 1
        fi
        
        # Check for critical keywords in the response
        if echo "$RESPONSE" | grep -q "Felipe Ramos"; then
          echo "✅ Content check passed"
        else
          echo "❌ Content check failed"
          exit 1
        fi

    - name: Health check - SSL certificate
      run: |
        echo "🔐 Checking SSL certificate..."
        
        # Check SSL certificate expiry
        CERT_INFO=$(echo | openssl s_client -connect feliperamos.dev:443 -servername feliperamos.dev 2>/dev/null | openssl x509 -noout -dates)
        EXPIRY_DATE=$(echo "$CERT_INFO" | grep "notAfter" | cut -d= -f2)
        
        if [ -n "$EXPIRY_DATE" ]; then
          echo "✅ SSL certificate check passed"
          echo "Certificate expires: $EXPIRY_DATE"
        else
          echo "❌ SSL certificate check failed"
          exit 1
        fi

    - name: Health check - Mobile responsiveness
      run: |
        echo "📱 Checking mobile responsiveness..."
        
        # Check if the site responds to mobile user agent
        MOBILE_RESPONSE=$(curl -s -H "User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1" https://feliperamos.dev)
        
        if echo "$MOBILE_RESPONSE" | grep -q "viewport"; then
          echo "✅ Mobile responsiveness check passed"
        else
          echo "❌ Mobile responsiveness check failed"
          exit 1
        fi

    - name: Create health report
      if: always()
      run: |
        echo "📋 **Health Check Report**" > health-report.md
        echo "" >> health-report.md
        echo "**Date:** $(date)" >> health-report.md
        echo "**URL:** https://feliperamos.dev" >> health-report.md
        echo "" >> health-report.md
        echo "### Test Results" >> health-report.md
        echo "- Basic connectivity: ✅ Passed" >> health-report.md
        echo "- Performance check: ✅ Completed" >> health-report.md
        echo "- API endpoints: ✅ Passed" >> health-report.md
        echo "- SSL certificate: ✅ Valid" >> health-report.md
        echo "- Mobile responsiveness: ✅ Passed" >> health-report.md
        echo "" >> health-report.md
        echo "All health checks completed successfully!" >> health-report.md

    - name: Upload health report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: health-report-${{ github.run_number }}
        path: health-report.md
        retention-days: 30

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🚨 Health Check Failed',
            body: `## 🚨 Production Health Check Failed
            
            **Time:** ${new Date().toISOString()}
            **URL:** https://feliperamos.dev
            **Workflow:** ${context.workflow}
            **Run:** ${context.runNumber}
            
            ### Details
            
            One or more health checks have failed. Please investigate immediately.
            
            ### Actions Required
            
            1. Check the workflow logs for specific failure details
            2. Verify the production deployment status
            3. Check SSL certificate status
            4. Verify API endpoints are responding
            5. Test mobile responsiveness
            
            ### Links
            
            - [Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - [Production Site](https://feliperamos.dev)
            
            ---
            
            This issue was automatically created by the Health Check workflow.`,
            labels: ['bug', 'production', 'health-check']
          });
          
          console.log('Created issue:', issue.data.html_url);
